/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelphsTable, DelphsTableInterface } from "../DelphsTable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "diceRollerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTwoRollsPerBlock",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "random",
        type: "bytes32",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "TableCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockOfRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "playerAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "statSeeds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createAndStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "playerAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "statSeeds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "destinations",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "destinationsForRoll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct DelphsTable.Destination[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player",
    outputs: [
      {
        internalType: "contract IPlayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollTheDice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roller",
    outputs: [
      {
        internalType: "contract IDiceRoller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rolls",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    name: "setDestination",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
    ],
    name: "statsForPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
        ],
        internalType: "struct DelphsTable.Stats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tables",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620019dd380380620019dd833981016040819052620000349162000149565b6001600160a01b03808416608052821660a052620000737fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775826200007c565b50505062000193565b6200008882826200008c565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000088576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000e83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200014457600080fd5b919050565b6000806000606084860312156200015f57600080fd5b6200016a846200012c565b92506200017a602085016200012c565b91506200018a604085016200012c565b90509250925092565b60805160a051611816620001c7600039600081816102880152610dee01526000818161020101526107fd01526118166000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806375b238fc116100c3578063a217fddf1161007c578063a217fddf146103b0578063ae383a4d146103b8578063d3098b9a146103c1578063d547741f14610429578063e0e543d01461043c578063f15c95491461045c57600080fd5b806375b238fc146103065780637d789dee1461032d578063863d928814610335578063907efe001461034857806391d148541461037d5780639424732e1461039057600080fd5b80632f2ff15d116101155780632f2ff15d1461023b578063361508521461025057806336568abe1461027057806348db5f89146102835780635d69f16c146102aa5780637213b814146102ca57600080fd5b8063015a18ed1461015d57806301ffc9a71461018357806313870132146101a6578063248a9ca3146101b95780632d1dc122146101dc5780632f09177d146101fc575b600080fd5b61017061016b3660046112eb565b61046f565b6040519081526020015b60405180910390f35b610196610191366004611304565b61052b565b604051901515815260200161017a565b6101966101b4366004611340565b610562565b6101706101c73660046112eb565b60009081526020819052604090206001015490565b6101706101ea3660046112eb565b60036020526000908152604090205481565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017a565b61024e610249366004611391565b610654565b005b61026361025e3660046112eb565b61067e565b60405161017a91906113c1565b61024e61027e366004611391565b6106e3565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6101706102b83660046112eb565b60026020526000908152604090205481565b6102dd6102d8366004611405565b610766565b604080516001600160a01b039094168452600792830b6020850152910b9082015260600161017a565b6101707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6101706107c7565b61024e61034336600461147d565b610928565b61035b610356366004611391565b61094a565b604080518251815260208084015190820152918101519082015260600161017a565b61019661038b366004611391565b610aa0565b6103a361039e3660046112eb565b610ac9565b60405161017a9190611514565b610170600081565b61017060015481565b6104016103cf3660046112eb565b6005602081905260009182526040909120805460038201546004830154929093015490926001600160a01b0316919084565b604080519485526001600160a01b03909316602085015291830152606082015260800161017a565b61024e610437366004611391565b610b37565b61044f61044a366004611555565b610b5c565b60405161017a9190611577565b61024e61046a36600461147d565b610bfc565b600081815260056020526040812060038101546001600160a01b0316610493610dcc565b6001600160a01b0316146104b9576040516282b42960e81b815260040160405180910390fd5b6004810154156104dc57604051631fbde44560e01b815260040160405180910390fd5b600060015460016104ed91906115f7565b60048301819055604051909150819085907f3a5803cb6dcb9c83b0584d712b7825e7e9fa6243be3cde9e798681f5c091e65c90600090a39392505050565b60006001600160e01b03198216637965db0b60e01b148061055c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061056d610dcc565b600086815260056020526040902090915061058b6001820183610e75565b6105a7576040516282b42960e81b815260040160405180910390fd5b50600094855260046020908152604080872060018054895290835281882082516060810184526001600160a01b039586168152600798890b8186019081529790980b92880192835280548083018255908952929097209551600290920290950180549451919092166001600160e01b031990941693909317600160a01b67ffffffffffffffff948516021781559251928401805467ffffffffffffffff1916939092169290921790555090565b60008281526020819052604090206001015461066f81610ee2565b6106798383610eef565b505050565b6000818152600560209081526040918290206002018054835181840281018401909452808452606093928301828280156106d757602002820191906000526020600020905b8154815260200190600101908083116106c3575b50505050509050919050565b6001600160a01b03811633146107585760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107628282610f73565b5050565b6004602052826000526040600020602052816000526040600020818154811061078e57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169450600160a01b909104600790810b93500b905083565b6001546000908152600360205260408120544390036107f9576040516374f70e7960e11b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aacc5a176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d919061160f565b90508060026000600154600161089391906115f7565b815260200190815260200160002081905550436003600060015460016108b991906115f7565b815260200190815260200160002081905550600160008154809291906108de90611628565b9190505550436001547f61a648c0140ef625babe35b3bc5ba2a28852bd10a17c53f6d9f3831b21096cd78360405161091891815260200190565b60405180910390a3505060015490565b61093787878787878787610bfc565b6109408761046f565b5050505050505050565b61096e60405180606001604052806000815260200160008152602001600081525090565b600083815260056020908152604080832060048101548452600290925291829020548251606081019093529091806109ec6109e4846109cd896080860160609190911b6001600160601b0319168152606160f81b601482015260150190565b6040516020818303038152906040526103e8610fd8565b610190611019565b8152602001610a44610a3d8488604051602001610a26919060609190911b6001600160601b0319168152601960fa1b601482015260150190565b604051602081830303815290604052610320610fd8565b60c8611019565b8152602001610a95610a3d8488604051602001610a7e919060609190911b6001600160601b0319168152600d60fb1b601482015260150190565b6040516020818303038152906040526102bc610fd8565b905295945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000818152600560209081526040918290206001018054835181840281018401909452808452606093928301828280156106d757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b0e5750505050509050919050565b600082815260208190526040902060010154610b5281610ee2565b6106798383610f73565b60008281526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610bf0576000848152602090819020604080516060810182526002860290920180546001600160a01b0381168452600160a01b9004600790810b84860152600191820154900b918301919091529083529092019101610b92565b50505050905092915050565b610c287fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561038b610dcc565b610c44576040516282b42960e81b815260040160405180910390fd5b6000878152600560205260409020600181015415610c755760405163119b4fd360e11b815260040160405180910390fd5b6040518060c00160405280898152602001888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505090825250604080516020888102828101820190935288825292830192909189918991829185019084908082843760009201829052509385525050506001600160a01b038516602080840191909152604080840183905260609093018790528b825260058152919020825181558282015180519192610d3e92600185019290910190611236565b5060408201518051610d5a91600284019160209091019061129b565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a09091015160059091015560405188907fff39e0eaf58742100b3d96f355f818806f2c4c75c3fb9c8ff1101305924884fa90600090a25050505050505050565b6040516336ec7a7760e01b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906336ec7a7790602401602060405180830381865afa158015610e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e599190611641565b90506001600160a01b038116610e70573391505090565b919050565b8154600090815b81811015610ed757836001600160a01b0316858281548110610ea057610ea061165e565b6000918252602090912001546001600160a01b031603610ec55760019250505061055c565b80610ecf81611628565b915050610e7c565b506000949350505050565b610eec813361102f565b50565b610ef98282610aa0565b610762576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610f2f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610f7d8282610aa0565b15610762576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000818484604051602001610fee9291906116a4565b6040516020818303038152906040528051906020012060001c61101191906116ca565b949350505050565b600081831061102957508161055c565b50919050565b6110398282610aa0565b61076257611051816001600160a01b03166014611093565b61105c836020611093565b60405160200161106d9291906116ec565b60408051601f198184030181529082905262461bcd60e51b825261074f91600401611761565b606060006110a2836002611794565b6110ad9060026115f7565b67ffffffffffffffff8111156110c5576110c56117b3565b6040519080825280601f01601f1916602001820160405280156110ef576020820181803683370190505b509050600360fc1b8160008151811061110a5761110a61165e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106111395761113961165e565b60200101906001600160f81b031916908160001a905350600061115d846002611794565b6111689060016115f7565b90505b60018111156111e0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061119c5761119c61165e565b1a60f81b8282815181106111b2576111b261165e565b60200101906001600160f81b031916908160001a90535060049490941c936111d9816117c9565b905061116b565b50831561122f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161074f565b9392505050565b82805482825590600052602060002090810192821561128b579160200282015b8281111561128b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611256565b506112979291506112d6565b5090565b82805482825590600052602060002090810192821561128b579160200282015b8281111561128b5782518255916020019190600101906112bb565b5b8082111561129757600081556001016112d7565b6000602082840312156112fd57600080fd5b5035919050565b60006020828403121561131657600080fd5b81356001600160e01b03198116811461122f57600080fd5b8035600781900b8114610e7057600080fd5b60008060006060848603121561135557600080fd5b833592506113656020850161132e565b91506113736040850161132e565b90509250925092565b6001600160a01b0381168114610eec57600080fd5b600080604083850312156113a457600080fd5b8235915060208301356113b68161137c565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156113f9578351835292840192918401916001016113dd565b50909695505050505050565b60008060006060848603121561141a57600080fd5b505081359360208301359350604090920135919050565b60008083601f84011261144357600080fd5b50813567ffffffffffffffff81111561145b57600080fd5b6020830191508360208260051b850101111561147657600080fd5b9250929050565b600080600080600080600060a0888a03121561149857600080fd5b87359650602088013567ffffffffffffffff808211156114b757600080fd5b6114c38b838c01611431565b909850965060408a01359150808211156114dc57600080fd5b506114e98a828b01611431565b9095509350506060880135915060808801356115048161137c565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156113f95783516001600160a01b031683529284019291840191600101611530565b6000806040838503121561156857600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b828110156115d457815180516001600160a01b0316855286810151600790810b8887015290860151900b8585015260609093019290850190600101611594565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561160a5761160a6115e1565b500190565b60006020828403121561162157600080fd5b5051919050565b60006001820161163a5761163a6115e1565b5060010190565b60006020828403121561165357600080fd5b815161122f8161137c565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561168f578181015183820152602001611677565b8381111561169e576000848401525b50505050565b828152600082516116bc816020850160208701611674565b919091016020019392505050565b6000826116e757634e487b7160e01b600052601260045260246000fd5b500690565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611724816017850160208801611674565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611755816028840160208801611674565b01602801949350505050565b6020815260008251806020840152611780816040850160208701611674565b601f01601f19169190910160400192915050565b60008160001904831182151516156117ae576117ae6115e1565b500290565b634e487b7160e01b600052604160045260246000fd5b6000816117d8576117d86115e1565b50600019019056fea2646970667358221220460af36810f66d4df59ea3d5c6c603ca31b0627d665bdccd826f72638926ab1d64736f6c634300080e0033";

export class DelphsTable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    diceRollerAddress: string,
    playerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelphsTable> {
    return super.deploy(
      diceRollerAddress,
      playerAddress,
      initialOwner,
      overrides || {}
    ) as Promise<DelphsTable>;
  }
  getDeployTransaction(
    diceRollerAddress: string,
    playerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      diceRollerAddress,
      playerAddress,
      initialOwner,
      overrides || {}
    );
  }
  attach(address: string): DelphsTable {
    return super.attach(address) as DelphsTable;
  }
  connect(signer: Signer): DelphsTable__factory {
    return super.connect(signer) as DelphsTable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelphsTableInterface {
    return new utils.Interface(_abi) as DelphsTableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelphsTable {
    return new Contract(address, _abi, signerOrProvider) as DelphsTable;
  }
}
